rm(list = ls())
library(limma)
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
df1<-df1[,7:12];group<-group[7:12] # ko_dex-ko_con
save(df1,group,file='dex_brg1.Rdata')
# 差异分析走标准的limma流程 ---------------------------------------------------------
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
load(file = 'dex_brg1.Rdata')
#创建一个分组的矩阵
design=model.matrix(~0+factor(group))#创建一个分组的矩阵
colnames(design)=levels(factor(group))
rownames(design)=colnames(df1)
head(design)
dematrix<-as.data.frame(design)
table(dematrix$wt_con)
table(dematrix$wt_dex)
table(dematrix$ko_dex)
contrast.matrix<-makeContrasts(wt_dex-wt_con,levels = design)
contrast.matrix<-makeContrasts(ko_dex-wt_dex,levels = design)
contrast.matrix<-makeContrasts(ko_dex-ko_con,levels = design)
contrast.matrix ##这个矩阵声明，我们要Tumor组和Non_Tumor组进行差异分析比较
#第一步lmFit，#lmFit为每个基因给定一系列的阵列来拟合线性模型
fit<-lmFit(df1,design)
#第二步eBayes，#eBayes给出了一个微阵列线性模型拟合，通过经验贝叶斯调整标准误差到一个共同的值来计算修正后的t统计量、修正后的f统计量和微分表达式的对数概率。
fit1<-contrasts.fit(fit, contrast.matrix)
fit1<-eBayes(fit1)
#第三步topTable,#topTable从线性模型拟合中提取出排名靠前的基因表。
options(digits = 4) #设置全局的数字有效位数为4
#topTable(fit1,coef=2,adjust='BH')
tempOutput<-topTable(fit1,coef=1,n=Inf)
tempOutput<-na.omit(tempOutput)#移除NA值
head(tempOutput)
tempOutput["SMARCA4",]
tempOutput$g=ifelse(tempOutput$P.Value>0.01,'stable', #if 判断：如果这一基因的P.Value>0.01，则为stable基因
ifelse( tempOutput$logFC>1.2,'up', #接上句else 否则：接下来开始判断那些P.Value<0.01的基因，再if 判断：如果logFC >1.5,则为up（上调）基因
ifelse( tempOutput$logFC < -1.2,'down','stable') )#接上句else 否则：接下来开始判断那些logFC <1.5 的基因，再if 判断：如果logFC <1.5，则为down（下调）基因，否则为stable基因
)
table(tempOutput$g)
tem<-tempOutput[!tempOutput$g=='stable',]
save(df1,group,tem,tempOutput,file = '差异基因.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/敲低Brg1后Dex使用与不使用的差异")
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
library(ggplot2)
library(clusterProfiler)
library(org.Hs.eg.db)
columns(org.Hs.eg.db)
library(enrichplot)
load(file = '差异基因.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
load(file = '差异基因.Rdata')
DEG<-tempOutput
DEG<-DEG[,1:6]
head(DEG)
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/敲低Brg1后Dex使用与不使用的差异")
## 不同的阈值，筛选到的差异基因数量就不一样，后面的超几何分布检验结果就大相径庭。
logFC_t=1
DEG$gene=ifelse(DEG$P.Value>0.01,'stable',
ifelse( DEG$logFC > logFC_t,'UP',
ifelse( DEG$logFC < -logFC_t,'DOWN','stable') )
)#P>0.05输出stable，其中设定当logFC大于1.5为上调输出'UP'，大于-1.5为下调输出'DOWN',，如果都不是则输出'stable'，从而增加了一列g，筛选出了上调和下调的基因
table(DEG$gene)
head(DEG)
# id转换
DEG$symbol=rownames(DEG)
df <- bitr(unique(DEG$symbol), fromType = "SYMBOL",
toType = c( "ENTREZID"),
OrgDb = org.Hs.eg.db)
#bitr功能为ID转换，
#bitr(geneID, fromType, toType, OrgDb, drop = TRUE)；
#geneid ：基因ID输入 ； fromtype ： 输入ID型；toType：输出ID型；orgdb ：注释数据库）
head(df)
deg<-DEG
DEG=merge(DEG,df,by.y='SYMBOL',by.x='symbol')
table(DEG$gene)
#把数据DEG,df通过，DEG的'symbol'列，df的'SYMBOL'列连接在一起，转化ID
head(DEG)
save(DEG,file = 'anno_DEG.Rdata')
gene_up= DEG[DEG$gene== 'UP','ENTREZID'] #选出上调基因ID
gene_down=DEG[DEG$gene== 'DOWN','ENTREZID'] #选出下调基因ID
gene_diff=c(gene_up,gene_down)#得出上下调基因ID
gene_all=as.character(DEG[ ,'ENTREZID'] )#得出所有基因ID
geneList=DEG$logFC#把 DEG 数据logFC列值赋值给数据geneList
names(geneList)=DEG$ENTREZID#把ID赋值给geneList数据的名字
geneList=sort(geneList,decreasing = T)#把数据进行排序
head(geneList)
# KEGG、GSEA 分析
kegg_plot <- function(diff_kegg){
dat<-diff_kegg
colnames(dat)
dat$pvalue = -log10(dat$pvalue)
dat$pvalue=dat$pvalue*dat$group
dat=dat[order(dat$pvalue,decreasing =F),]
g_kegg<- ggplot(dat, aes(x=reorder(Description,order(pvalue, decreasing =T)), y=pvalue, fill=group)) +
geom_bar(stat="identity") +
scale_fill_gradient(low="blue",high="red",guide = FALSE) +
scale_x_discrete(name ="Pathway names") +
scale_y_continuous(name ="log10P-value") +
coord_flip() + theme_bw()+
theme(text = element_text(size=8),plot.title = element_text(hjust = 0.1))+
ggtitle("Pathway Enrichment")
}
if(T){
###   over-representation test
# KEGG
kk.up <- enrichKEGG(gene         = gene_up,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff =0.9,
qvalueCutoff =0.9)
head(kk.up)[,1:6]
dotplot(kk.up )
# ggsave('kk.up.dotplot.png')
kk.down <- enrichKEGG(gene         =  gene_down,
organism     = "hsa",
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.down)[,1:6]
dotplot(kk.down)
# ggsave('kk.down.dotplot.png')
kk.diff <- enrichKEGG(gene         = gene_diff,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.diff)[,1:6]
dotplot(kk.diff )
# ggsave('kk.diff.dotplot.png')
kegg_down_dt <- as.data.frame(kk.down)
down_kegg<-kegg_down_dt[kegg_down_dt$pvalue<0.05,];down_kegg$group=-1
print(kegg_plot(down_kegg))
kegg_up_dt <- as.data.frame(kk.up)
up_kegg<-kegg_up_dt[kegg_up_dt$pvalue<0.05,];up_kegg$group=1
print(kegg_plot(up_kegg))
kegg_diff_dt <- as.data.frame(kk.diff)
diff_kegg<-kegg_diff_dt[kegg_diff_dt$pvalue<0.05,];diff_kegg$group=1
kegg_plot(diff_kegg)
# ggsave(g_kegg,filename = 'diff_kegg.png')
}
dotplot(kk.up )
dotplot(kk.down)
dotplot(kk.diff )
kegg_plot(diff_kegg)
kegg_diff_dt <- as.data.frame(kk.diff)
diff_kegg<-kegg_diff_dt[kegg_diff_dt$pvalue<0.05,];diff_kegg$group=1
kegg_plot(diff_kegg)
print(kegg_plot(diff_kegg))
print(kegg_plot(down_kegg))
print(kegg_plot(up_kegg))
# GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
diff_gsea_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore > 0,];diff_gsea_kegg$group=1
print(kegg_plot(diff_gsea_kegg)) # 富集
dotplot(diff_gsea_kegg )
# gseaplot(kk_gse, geneSetID = rownames(kk_gse[7,]))
gseaplot2(kk_gse, geneSetID = rownames(kk_gse[1:6,]),pvalue_table=T,title = '敲低Brg1后使用Dex' )
print(kegg_plot(diff_gsea_kegg)) # 富集
print(kegg_plot(diff_kegg))
# gseaplot(kk_gse, geneSetID = rownames(kk_gse[7,]))
gseaplot2(kk_gse, geneSetID = rownames(kk_gse[9,]),pvalue_table=T,title = '敲低Brg1后使用Dex' )
rownames(kk_gse)
rownames(kk_gse[,1:4])
# gseaplot(kk_gse, geneSetID = rownames(kk_gse[7,]))
gseaplot2(kk_gse, geneSetID = rownames(kk_gse[6:10,]),pvalue_table=T,title = '敲低Brg1后使用Dex' )
# gseaplot(kk_gse, geneSetID = rownames(kk_gse[7,]))
gseaplot2(kk_gse, geneSetID = rownames(kk_gse[11,]),pvalue_table=T,title = '敲低Brg1后使用Dex' )
gseaplot(kk_gse, geneSetID = rownames(kk_gse[11,]))
View(tem)
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
df1<-df1[,c(1:3,10:12)];group<-group[c(1:3,10:12)] # ko_dex-wt_con
rm(list = ls())
options(stringsAsFactors = F,scipen = 200)
library(limma)
# 数据初步整理 ------------------------------------------------------------------
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
df1<-df1[,c(1:3,10:12)];group<-group[c(1:3,10:12)] # ko_dex-wt_con
save(df1,group,file='dex_brg1.Rdata')
# 差异分析走标准的limma流程 ---------------------------------------------------------
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
load(file = 'dex_brg1.Rdata')
#创建一个分组的矩阵
design=model.matrix(~0+factor(group))#创建一个分组的矩阵
colnames(design)=levels(factor(group))
rownames(design)=colnames(df1)
head(design)
dematrix<-as.data.frame(design)
table(dematrix$ko_dex)
contrast.matrix<-makeContrasts(ko_dex-wt_con,levels = design)
contrast.matrix ##这个矩阵声明，我们要Tumor组和Non_Tumor组进行差异分析比较
#第一步lmFit，#lmFit为每个基因给定一系列的阵列来拟合线性模型
fit<-lmFit(df1,design)
#第二步eBayes，#eBayes给出了一个微阵列线性模型拟合，通过经验贝叶斯调整标准误差到一个共同的值来计算修正后的t统计量、修正后的f统计量和微分表达式的对数概率。
fit1<-contrasts.fit(fit, contrast.matrix)
fit1<-eBayes(fit1)
#第三步topTable,#topTable从线性模型拟合中提取出排名靠前的基因表。
options(digits = 4) #设置全局的数字有效位数为4
#topTable(fit1,coef=2,adjust='BH')
tempOutput<-topTable(fit1,coef=1,n=Inf)
tempOutput<-na.omit(tempOutput)#移除NA值
head(tempOutput)
tempOutput["SMARCA4",]
tempOutput$g=ifelse(tempOutput$P.Value>0.01,'stable', #if 判断：如果这一基因的P.Value>0.01，则为stable基因
ifelse( tempOutput$logFC>1.2,'up', #接上句else 否则：接下来开始判断那些P.Value<0.01的基因，再if 判断：如果logFC >1.5,则为up（上调）基因
ifelse( tempOutput$logFC < -1.2,'down','stable') )#接上句else 否则：接下来开始判断那些logFC <1.5 的基因，再if 判断：如果logFC <1.5，则为down（下调）基因，否则为stable基因
)
table(tempOutput$g)
tem<-tempOutput[!tempOutput$g=='stable',]
save(df1,group,tem,tempOutput,file = '差异基因.Rdata')
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
library(ggplot2)
library(clusterProfiler)
library(org.Hs.eg.db)
columns(org.Hs.eg.db)
library(enrichplot)
load(file = '差异基因.Rdata')
DEG<-tempOutput
DEG<-DEG[,1:6]
head(DEG)
## 不同的阈值，筛选到的差异基因数量就不一样，后面的超几何分布检验结果就大相径庭。
logFC_t=1
DEG$gene=ifelse(DEG$P.Value>0.01,'stable',
ifelse( DEG$logFC > logFC_t,'UP',
ifelse( DEG$logFC < -logFC_t,'DOWN','stable') )
)#P>0.05输出stable，其中设定当logFC大于1.5为上调输出'UP'，大于-1.5为下调输出'DOWN',，如果都不是则输出'stable'，从而增加了一列g，筛选出了上调和下调的基因
table(DEG$gene)
head(DEG)
# id转换
DEG$symbol=rownames(DEG)
df <- bitr(unique(DEG$symbol), fromType = "SYMBOL",
toType = c( "ENTREZID"),
OrgDb = org.Hs.eg.db)
#bitr功能为ID转换，
#bitr(geneID, fromType, toType, OrgDb, drop = TRUE)；
#geneid ：基因ID输入 ； fromtype ： 输入ID型；toType：输出ID型；orgdb ：注释数据库）
head(df)
deg<-DEG
DEG=merge(DEG,df,by.y='SYMBOL',by.x='symbol')
table(DEG$gene)
#把数据DEG,df通过，DEG的'symbol'列，df的'SYMBOL'列连接在一起，转化ID
head(DEG)
save(DEG,file = 'anno_DEG.Rdata')
gene_up= DEG[DEG$gene== 'UP','ENTREZID'] #选出上调基因ID
gene_down=DEG[DEG$gene== 'DOWN','ENTREZID'] #选出下调基因ID
gene_diff=c(gene_up,gene_down)#得出上下调基因ID
gene_all=as.character(DEG[ ,'ENTREZID'] )#得出所有基因ID
geneList=DEG$logFC#把 DEG 数据logFC列值赋值给数据geneList
names(geneList)=DEG$ENTREZID#把ID赋值给geneList数据的名字
geneList=sort(geneList,decreasing = T)#把数据进行排序
head(geneList)
# KEGG、GSEA 分析
kegg_plot <- function(diff_kegg){
dat<-diff_kegg
colnames(dat)
dat$pvalue = -log10(dat$pvalue)
dat$pvalue=dat$pvalue*dat$group
dat=dat[order(dat$pvalue,decreasing =F),]
g_kegg<- ggplot(dat, aes(x=reorder(Description,order(pvalue, decreasing =T)), y=pvalue, fill=group)) +
geom_bar(stat="identity") +
scale_fill_gradient(low="blue",high="red",guide = FALSE) +
scale_x_discrete(name ="Pathway names") +
scale_y_continuous(name ="log10P-value") +
coord_flip() + theme_bw()+
theme(text = element_text(size=8),plot.title = element_text(hjust = 0.1))+
ggtitle("Pathway Enrichment")
}
###   over-representation test
# KEGG
kk.up <- enrichKEGG(gene         = gene_up,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff =0.9,
qvalueCutoff =0.9)
head(kk.up)[,1:6]
dotplot(kk.up )
# ggsave('kk.up.dotplot.png')
kk.down <- enrichKEGG(gene         =  gene_down,
organism     = "hsa",
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.down)[,1:6]
dotplot(kk.down)
# ggsave('kk.down.dotplot.png')
kk.diff <- enrichKEGG(gene         = gene_diff,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk.diff)[,1:6]
dotplot(kk.diff )
kegg_up_dt <- as.data.frame(kk.up)
up_kegg<-kegg_up_dt[kegg_up_dt$pvalue<0.05,];up_kegg$group=1
print(kegg_plot(up_kegg))
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/敲低Brg1使用dex与正常对比")
# GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
head(kk_gse)[,1:6]
diff_gsea_kegg<-kk_gse[kk_gse$pvalue<0.05 & kk_gse$enrichmentScore > 0,];diff_gsea_kegg$group=1
print(kegg_plot(diff_gsea_kegg)) # 富集
diff_gsea_kegg[,2]
head(kk_gse)[,2]
verbose      = FALSE)
kk_gse[,2]
kk_gse[10,2]
kk_gse[1:10,2]
kk_gse[1:20,2]
# gseaplot(kk_gse, geneSetID = rownames(kk_gse[11,]))
gseaplot2(kk_gse, geneSetID = rownames(kk_gse[c(5,18),]),pvalue_table=T,title = '敲低Brg1后使用Dex' )
# gseaplot(kk_gse, geneSetID = rownames(kk_gse[11,]))
gseaplot2(kk_gse, geneSetID = rownames(kk_gse[c(5,18),]),pvalue_table=T,title = '敲低Brg1后使用Dex与正常' )
save(DEG,file = 'anno_DEG.Rdata')
rm(list = ls())
options(stringsAsFactors = F,scipen = 200)
library(limma)
# 数据初步整理 ------------------------------------------------------------------
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
rm(list = ls())
options(stringsAsFactors = F,scipen = 200)
library(limma)
# 数据初步整理 ------------------------------------------------------------------
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
df1<-df1[,1:6];group<-group[1:6] # wt_dex-wt_con
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/Dex使用与不使用的差异")
save(df1,group,file='dex_brg1.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
rm(list = ls())
options(stringsAsFactors = F,scipen = 200)
library(limma)
# 数据初步整理 ------------------------------------------------------------------
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
df1<-df1[,c(1:3,7:9)];group<-group[c(1:3,7:9)] # ko_con-wt_con
save(df1,group,file='dex_brg1.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/敲低与未敲低Brg1的差异")
save(df1,group,file='dex_brg1.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
rm(list = ls())
options(stringsAsFactors = F,scipen = 200)
library(limma)
# 数据初步整理 ------------------------------------------------------------------
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
df1<-df1[,c(4:6,10:12)];group<-group[c(4:6,10:12)] # ko_dex-wt_dex
save(df1,group,file='dex_brg1.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/使用Dex在敲低与未敲低Brg1中的差异")
save(df1,group,file='dex_brg1.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
rm(list = ls())
options(stringsAsFactors = F,scipen = 200)
library(limma)
# 数据初步整理 ------------------------------------------------------------------
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
df1<-df1[,7:12];group<-group[7:12] # ko_dex-ko_con
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/敲低Brg1后Dex使用与不使用的差异")
save(df1,group,file='dex_brg1.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
rm(list = ls())
options(stringsAsFactors = F,scipen = 200)
library(limma)
# 数据初步整理 ------------------------------------------------------------------
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
df1<-df1[,c(1:3,10:12)];group<-group[c(1:3,10:12)] # ko_dex-wt_con
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/敲低Brg1使用dex与正常对比")
df1<-df1[,c(1:3,10:12)];group<-group[c(1:3,10:12)] # ko_dex-wt_con
save(df1,group,file='dex_brg1.Rdata')
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491")
rm(list = ls())
options(stringsAsFactors = F,scipen = 200)
library(limma)
# 数据初步整理 ------------------------------------------------------------------
df1<-read.csv('GSE112491_A1A3_RNAseq_log2normalized_geneCounts.CSV',header = T)
lis<-strsplit(df1$GeneName,'[.]')
for (i in 1:length(lis)) {
df1$symbol[i]<- lis[[i]][1]
};rm(i)
df1<- avereps(df1[,c(-1,-14)],ID=df1$symbol)
df1<-df1[,colSums(df1)>0]
df1<-df1[rowSums(df1)>0,]
df1<-as.matrix(df1)
group<-c(rep('wt_con',3),rep('wt_dex',3),rep('ko_con',3),rep('ko_dex',3))
df1<-df1[,c(4:9)];group<-group[c(4:9)] # ko_con-wt_dex
setwd("E:/OneDrive/彭炳明/彭炳明电脑/数据/原代气道上皮细胞/GSE112491/差异/只敲低Brg1与只使用Dex")
save(df1,group,file='dex_brg1.Rdata')
